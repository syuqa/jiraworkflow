# resources:
# http://www.ameyalokare.com/docker/2017/09/20/nginx-flask-postgres-docker-compose.html
# https://github.com/juggernaut/nginx-flask-postgres-docker-compose-example
# https://serverfault.com/questions/783806/docker-how-to-django-uwsgi-gunicorn-nginx/787402
# https://github.com/andrecp/django-tutorial-docker-nginx-postgres
# https://github.com/realpython/dockerizing-django
# http://ruddra.com/2016/08/14/docker-django-nginx-postgres/index.html
# https://stackoverflow.com/questions/32180589/docker-how-to-expose-a-socket-over-a-port-for-a-django-application


version: '3'

services:

  #database containers, one for each db
  database1:
    image: postgres:14-alpine
    volumes:
      - database1_volume:/var/lib/postgresql/data
    env_file:
      - config/db/database1_env
    networks:
      - database1_network

  #database2:
  #  image: postgres:10
  #  volumes:
  #    - database2_volume:/var/lib/postgresql/data
  #  env_file:
  #    - config/db/database2_envd
  #  networks:
  #    - database2_network

  # web container, with django + gunicorn
  app:
    build: .
    environment:
      - DJANGO_SETTINGS_MODULE
      - SECRET_KEY=4d!2@*cmd5)xz$s#jt9xt8dcox2om!78a^=+wy!dyyf)9b!lkj
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmw
      - CELERY_BROKER=redis://redis:6379/0
      - TZ=Europe/Moscow
    volumes:
      - .:/opt/services/app/src
      - static:/opt/services/app/static
      - media:/opt/services/app/media
      # - database:/opt/services/app/database
    networks:
      - database1_network
      # - database2_network
      - radis_network
      - nginx_network
    depends_on:
      - redis
      - database1
      #- database2
      

  # reverse proxy container (nginx)
  nginx:
    image: nginx:1.13
    ports:
      - 80:80
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - static:/opt/services/app/static
      - media:/opt/services/app/media
    networks:
      - nginx_network
    depends_on:
      - app

  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    command: /bin/sh -c 'echo 4096 > /wproc/sys/net/core/somaxconn && redis-server --save 20 1 --loglevel warning'
    environment:
      - TZ=Europe/Moscow
    networks:
      - radis_network
    volumes: 
      - cache:/data
      - /proc/sys/net/core/somaxconn:/wproc/sys/net/core/somaxconn

  celery:
    build: ./jiraworkflow
    command: celery -A jiraworkflow worker -l info
    volumes:
      - ./jiraworkflow:/opt/services/app/src
    environment:
      - DEBUG=1
      - CELERY_BROKER=redis://redis:6379/0
      - SECRET_KEY=4d!2@*cmd5)xz$s#jt9xt8dcox2om!78a^=+wy!dyyf)9b!lkj
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    networks:
      - radis_network
      - database1_network
    depends_on:
      - redis
      - database1

  celery-beat:
    build: ./jiraworkflow
    command: celery -A jiraworkflow beat -l info
    volumes:
      - ./jiraworkflow:/opt/services/app/src
    environment:
      - DEBUG=1
      - CELERY_BROKER=redis://redis:6379/0
      - SECRET_KEY=4d!2@*cmd5)xz$s#jt9xt8dcox2om!78a^=+wy!dyyf)9b!lkj
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    networks:
      - radis_network
      - database1_network
    depends_on:
      - redis
      - database1

networks:
  radis_network:
    driver: bridge
  database1_network:
    driver: bridge
  #database2_network:
    #driver: bridge
  nginx_network:
    driver: bridge

volumes:
  database1_volume:
  #database2_volume:
  static:
  media:
  database:
  cache:
